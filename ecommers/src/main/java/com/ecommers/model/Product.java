package com.ecommers.model;
// Generated 31-May-2025, 5:05:44 pm by Hibernate Tools 4.0.1.Final


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;


import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,schema="public"
)
public class Product implements java.io.Serializable {

     private int productId;
     private Category category;
     private Brand brand;
     private String productName;
     private String description;
     private Double price;
     private Integer quantity;
     private LocalDateTime createdDate;
     private LocalDateTime updateDate;
     private Set<ProductImage> productImages = new HashSet<ProductImage>(0);
     private Set<Inventory> inventories = new HashSet<Inventory>(0);
     private Set<Discount> discounts = new HashSet<Discount>(0);
    private Set<Colour> colours = new HashSet<>();
    public Product() {
    }


    public Product(int productId, String productName, Double price, LocalDateTime createdDate) {
        this.productId = productId;
        this.productName = productName;
        this.price = price;
        this.createdDate = createdDate;
    }
    public Product(int productId, Category category, Brand brand, String productName, String description, Double price, Integer quantiy, LocalDateTime createdDate, LocalDateTime updateDate, Set<ProductImage> productImages, Set<Inventory> inventories, Set<Discount> discounts) {
       this.productId = productId;
       this.category = category;
       this.brand = brand;
       this.productName = productName;
       this.description = description;
       this.price = price;
       this.quantity = quantity;
       this.createdDate = createdDate;
       this.updateDate = updateDate;
       this.productImages = productImages;
       this.inventories = inventories;
       this.discounts = discounts;
    }

     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="product_id", unique=true, nullable=false)
    public int getProductId() {
        return this.productId;
    }

    public void setProductId(int productId) {
        this.productId = productId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="category_id")
    public Category getCategory() {
        return this.category;
    }

    public void setCategory(Category category) {
        this.category = category;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="brand_id")
    public Brand getBrand() {
        return this.brand;
    }

    public void setBrand(Brand brand) {
        this.brand = brand;
    }


    @Column(name="product_name", nullable=false, length=200)
    public String getProductName() {
        return this.productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }


    @Column(name="description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }


    @Column(name="price", nullable=false, precision=10, scale=0)
    public Double getPrice() {
        return this.price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    @Column(name="quantity")
    public Integer getQuantiy() {
        return quantity;
    }
    public void setQuantiy(Integer quantity) {
        this.quantity = quantity;
    }


    @Column(name="created_date", nullable=false, length=29)
    public LocalDateTime getcreatedDate() {
        return this.createdDate;
    }

    public void setcreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }


    @Column(name="update_date", length=29)
    public LocalDateTime getUpdateDate() {
        return this.updateDate;
    }

    public void setUpdateDate(LocalDateTime upLocalDateTimeLocalDateTime) {
        this.updateDate = upLocalDateTimeLocalDateTime;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<ProductImage> getProductImages() {
        return this.productImages;
    }

    public void setProductImages(Set<ProductImage> productImages) {
        this.productImages = productImages;
    }

   @OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Inventory> getInventories() {
        return this.inventories;
    }

    public void setInventories(Set<Inventory> inventories) {
        this.inventories = inventories;
    }

   @OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<Discount> getDiscounts() {
        return this.discounts;
    }

    public void setDiscounts(Set<Discount> discounts) {
        this.discounts = discounts;
    }


    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(
            name = "product_colour",
            schema = "public",
            joinColumns = @JoinColumn(name = "product_id"),
            inverseJoinColumns = @JoinColumn(name = "colour_id")
    )
    public Set<Colour> getColours() {
        return colours;
    }

    public void setColours(Set<Colour> colours) {
        this.colours = colours;
    }
}


